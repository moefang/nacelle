"""
Simple WSGI middleware to apply cache control headers
to all responses unless they have already been set.
"""
# third-party imports
from webob import Request


class CacheControlMiddleware(object):

    """
    Applies cache-control headers to all responses
    generated by a wrapped WSGI instance
    """

    def __init__(self, app, max_age=600):

        # wrapped WSGI app
        self.app = app
        # build cache-control value
        self.value = "public, max-age=%d" % max_age

    def __call__(self, environ, start_response):

        # get current request
        request = Request(environ)
        # get current response
        response = request.get_response(self.app)
        # check if cache control headers have already been set
        if 'Cache-Control' in response.headers and response.headers['Cache-Control'] == 'no-cache':
            # set headers if needed
            response.headers['Cache-Control'] = self.value
        # get response output
        output = response(environ, start_response)
        # return WSGI app
        return output
